// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/ehazlett/circuit/api/circuit/v1/circuit.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type CreateNetworkRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNetworkRequest) Reset()         { *m = CreateNetworkRequest{} }
func (m *CreateNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNetworkRequest) ProtoMessage()    {}
func (*CreateNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{0}
}
func (m *CreateNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNetworkRequest.Unmarshal(m, b)
}
func (m *CreateNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNetworkRequest.Marshal(b, m, deterministic)
}
func (m *CreateNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNetworkRequest.Merge(m, src)
}
func (m *CreateNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNetworkRequest.Size(m)
}
func (m *CreateNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNetworkRequest proto.InternalMessageInfo

func (m *CreateNetworkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNetworkRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNetworksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNetworksRequest) Reset()         { *m = ListNetworksRequest{} }
func (m *ListNetworksRequest) String() string { return proto.CompactTextString(m) }
func (*ListNetworksRequest) ProtoMessage()    {}
func (*ListNetworksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{1}
}
func (m *ListNetworksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworksRequest.Unmarshal(m, b)
}
func (m *ListNetworksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworksRequest.Marshal(b, m, deterministic)
}
func (m *ListNetworksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworksRequest.Merge(m, src)
}
func (m *ListNetworksRequest) XXX_Size() int {
	return xxx_messageInfo_ListNetworksRequest.Size(m)
}
func (m *ListNetworksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworksRequest proto.InternalMessageInfo

type Network struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{2}
}
func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Network) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNetworksResponse struct {
	Networks             []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListNetworksResponse) Reset()         { *m = ListNetworksResponse{} }
func (m *ListNetworksResponse) String() string { return proto.CompactTextString(m) }
func (*ListNetworksResponse) ProtoMessage()    {}
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{3}
}
func (m *ListNetworksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworksResponse.Unmarshal(m, b)
}
func (m *ListNetworksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworksResponse.Marshal(b, m, deterministic)
}
func (m *ListNetworksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworksResponse.Merge(m, src)
}
func (m *ListNetworksResponse) XXX_Size() int {
	return xxx_messageInfo_ListNetworksResponse.Size(m)
}
func (m *ListNetworksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworksResponse proto.InternalMessageInfo

func (m *ListNetworksResponse) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

type GetNetworkRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkRequest) Reset()         { *m = GetNetworkRequest{} }
func (m *GetNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*GetNetworkRequest) ProtoMessage()    {}
func (*GetNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{4}
}
func (m *GetNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkRequest.Unmarshal(m, b)
}
func (m *GetNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkRequest.Marshal(b, m, deterministic)
}
func (m *GetNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkRequest.Merge(m, src)
}
func (m *GetNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_GetNetworkRequest.Size(m)
}
func (m *GetNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkRequest proto.InternalMessageInfo

func (m *GetNetworkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetNetworkResponse struct {
	Network              *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkResponse) Reset()         { *m = GetNetworkResponse{} }
func (m *GetNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*GetNetworkResponse) ProtoMessage()    {}
func (*GetNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{5}
}
func (m *GetNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkResponse.Unmarshal(m, b)
}
func (m *GetNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkResponse.Marshal(b, m, deterministic)
}
func (m *GetNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkResponse.Merge(m, src)
}
func (m *GetNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_GetNetworkResponse.Size(m)
}
func (m *GetNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkResponse proto.InternalMessageInfo

func (m *GetNetworkResponse) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type ConnectRequest struct {
	Container            string   `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{6}
}
func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *ConnectRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type ConnectResponse struct {
	IP                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{7}
}
func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type DisconnectRequest struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Container            string   `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectRequest) Reset()         { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()    {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{8}
}
func (m *DisconnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectRequest.Unmarshal(m, b)
}
func (m *DisconnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectRequest.Merge(m, src)
}
func (m *DisconnectRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectRequest.Size(m)
}
func (m *DisconnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectRequest proto.InternalMessageInfo

func (m *DisconnectRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *DisconnectRequest) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

type DeleteNetworkRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNetworkRequest) Reset()         { *m = DeleteNetworkRequest{} }
func (m *DeleteNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNetworkRequest) ProtoMessage()    {}
func (*DeleteNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{9}
}
func (m *DeleteNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNetworkRequest.Unmarshal(m, b)
}
func (m *DeleteNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNetworkRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNetworkRequest.Merge(m, src)
}
func (m *DeleteNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNetworkRequest.Size(m)
}
func (m *DeleteNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNetworkRequest proto.InternalMessageInfo

func (m *DeleteNetworkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NetworkConfig struct {
	Networks             map[string]*ContainerNetworkConfig `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *NetworkConfig) Reset()         { *m = NetworkConfig{} }
func (m *NetworkConfig) String() string { return proto.CompactTextString(m) }
func (*NetworkConfig) ProtoMessage()    {}
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{10}
}
func (m *NetworkConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkConfig.Unmarshal(m, b)
}
func (m *NetworkConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkConfig.Marshal(b, m, deterministic)
}
func (m *NetworkConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkConfig.Merge(m, src)
}
func (m *NetworkConfig) XXX_Size() int {
	return xxx_messageInfo_NetworkConfig.Size(m)
}
func (m *NetworkConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkConfig proto.InternalMessageInfo

func (m *NetworkConfig) GetNetworks() map[string]*ContainerNetworkConfig {
	if m != nil {
		return m.Networks
	}
	return nil
}

type ContainerNetworkConfig struct {
	Interface            string   `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	IP                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerNetworkConfig) Reset()         { *m = ContainerNetworkConfig{} }
func (m *ContainerNetworkConfig) String() string { return proto.CompactTextString(m) }
func (*ContainerNetworkConfig) ProtoMessage()    {}
func (*ContainerNetworkConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{11}
}
func (m *ContainerNetworkConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerNetworkConfig.Unmarshal(m, b)
}
func (m *ContainerNetworkConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerNetworkConfig.Marshal(b, m, deterministic)
}
func (m *ContainerNetworkConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerNetworkConfig.Merge(m, src)
}
func (m *ContainerNetworkConfig) XXX_Size() int {
	return xxx_messageInfo_ContainerNetworkConfig.Size(m)
}
func (m *ContainerNetworkConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerNetworkConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerNetworkConfig proto.InternalMessageInfo

func (m *ContainerNetworkConfig) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *ContainerNetworkConfig) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type GetContainerIPsRequest struct {
	Container            string   `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainerIPsRequest) Reset()         { *m = GetContainerIPsRequest{} }
func (m *GetContainerIPsRequest) String() string { return proto.CompactTextString(m) }
func (*GetContainerIPsRequest) ProtoMessage()    {}
func (*GetContainerIPsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{12}
}
func (m *GetContainerIPsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainerIPsRequest.Unmarshal(m, b)
}
func (m *GetContainerIPsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainerIPsRequest.Marshal(b, m, deterministic)
}
func (m *GetContainerIPsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainerIPsRequest.Merge(m, src)
}
func (m *GetContainerIPsRequest) XXX_Size() int {
	return xxx_messageInfo_GetContainerIPsRequest.Size(m)
}
func (m *GetContainerIPsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainerIPsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainerIPsRequest proto.InternalMessageInfo

func (m *GetContainerIPsRequest) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *GetContainerIPsRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type ContainerIP struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	IP                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Interface            string   `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerIP) Reset()         { *m = ContainerIP{} }
func (m *ContainerIP) String() string { return proto.CompactTextString(m) }
func (*ContainerIP) ProtoMessage()    {}
func (*ContainerIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{13}
}
func (m *ContainerIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerIP.Unmarshal(m, b)
}
func (m *ContainerIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerIP.Marshal(b, m, deterministic)
}
func (m *ContainerIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerIP.Merge(m, src)
}
func (m *ContainerIP) XXX_Size() int {
	return xxx_messageInfo_ContainerIP.Size(m)
}
func (m *ContainerIP) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerIP.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerIP proto.InternalMessageInfo

func (m *ContainerIP) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *ContainerIP) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *ContainerIP) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

type GetContainerIPsResponse struct {
	IPs                  []*ContainerIP `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetContainerIPsResponse) Reset()         { *m = GetContainerIPsResponse{} }
func (m *GetContainerIPsResponse) String() string { return proto.CompactTextString(m) }
func (*GetContainerIPsResponse) ProtoMessage()    {}
func (*GetContainerIPsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdbc96027d138133, []int{14}
}
func (m *GetContainerIPsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainerIPsResponse.Unmarshal(m, b)
}
func (m *GetContainerIPsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainerIPsResponse.Marshal(b, m, deterministic)
}
func (m *GetContainerIPsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainerIPsResponse.Merge(m, src)
}
func (m *GetContainerIPsResponse) XXX_Size() int {
	return xxx_messageInfo_GetContainerIPsResponse.Size(m)
}
func (m *GetContainerIPsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainerIPsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainerIPsResponse proto.InternalMessageInfo

func (m *GetContainerIPsResponse) GetIPs() []*ContainerIP {
	if m != nil {
		return m.IPs
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateNetworkRequest)(nil), "io.circuit.v1.CreateNetworkRequest")
	proto.RegisterType((*ListNetworksRequest)(nil), "io.circuit.v1.ListNetworksRequest")
	proto.RegisterType((*Network)(nil), "io.circuit.v1.Network")
	proto.RegisterType((*ListNetworksResponse)(nil), "io.circuit.v1.ListNetworksResponse")
	proto.RegisterType((*GetNetworkRequest)(nil), "io.circuit.v1.GetNetworkRequest")
	proto.RegisterType((*GetNetworkResponse)(nil), "io.circuit.v1.GetNetworkResponse")
	proto.RegisterType((*ConnectRequest)(nil), "io.circuit.v1.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "io.circuit.v1.ConnectResponse")
	proto.RegisterType((*DisconnectRequest)(nil), "io.circuit.v1.DisconnectRequest")
	proto.RegisterType((*DeleteNetworkRequest)(nil), "io.circuit.v1.DeleteNetworkRequest")
	proto.RegisterType((*NetworkConfig)(nil), "io.circuit.v1.NetworkConfig")
	proto.RegisterMapType((map[string]*ContainerNetworkConfig)(nil), "io.circuit.v1.NetworkConfig.NetworksEntry")
	proto.RegisterType((*ContainerNetworkConfig)(nil), "io.circuit.v1.ContainerNetworkConfig")
	proto.RegisterType((*GetContainerIPsRequest)(nil), "io.circuit.v1.GetContainerIPsRequest")
	proto.RegisterType((*ContainerIP)(nil), "io.circuit.v1.ContainerIP")
	proto.RegisterType((*GetContainerIPsResponse)(nil), "io.circuit.v1.GetContainerIPsResponse")
}

func init() {
	proto.RegisterFile("github.com/ehazlett/circuit/api/circuit/v1/circuit.proto", fileDescriptor_cdbc96027d138133)
}

var fileDescriptor_cdbc96027d138133 = []byte{
	// 637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0x92, 0xb1, 0xb2, 0xbb, 0x95, 0x31, 0x53, 0x4a, 0x15, 0x3e, 0x56, 0x3c, 0x0d, 0xc6,
	0x24, 0x12, 0x5a, 0x84, 0x34, 0x31, 0x89, 0x87, 0x75, 0x9f, 0x50, 0x4d, 0xa5, 0x2f, 0x48, 0x48,
	0x48, 0xa4, 0xc1, 0xcd, 0xac, 0xb5, 0x71, 0x48, 0xdc, 0xa2, 0xf2, 0xd7, 0x78, 0xe6, 0x6f, 0xec,
	0x61, 0xbf, 0x04, 0x25, 0x71, 0x92, 0xe6, 0xab, 0x9b, 0xc4, 0xdb, 0xcd, 0xf5, 0xf1, 0xb9, 0xf7,
	0xf8, 0xda, 0x27, 0xb0, 0x67, 0x51, 0x7e, 0x31, 0x19, 0x68, 0x26, 0x1b, 0xeb, 0xe4, 0xc2, 0xf8,
	0x3d, 0x22, 0x9c, 0xeb, 0x26, 0x75, 0xcd, 0x09, 0xe5, 0xba, 0xe1, 0xd0, 0x38, 0x9e, 0xb6, 0xa2,
	0x50, 0x73, 0x5c, 0xc6, 0x19, 0xaa, 0x52, 0xa6, 0x45, 0x99, 0x69, 0x4b, 0xad, 0x59, 0xcc, 0x62,
	0xc1, 0x8a, 0xee, 0x47, 0x21, 0x48, 0x7d, 0x6c, 0x31, 0x66, 0x8d, 0x88, 0x1e, 0x7c, 0x0d, 0x26,
	0x43, 0x9d, 0x8c, 0x1d, 0x3e, 0x0b, 0x17, 0xf1, 0x07, 0xa8, 0x75, 0x5c, 0x62, 0x70, 0x72, 0x4e,
	0xf8, 0x2f, 0xe6, 0x5e, 0xf6, 0xc9, 0xcf, 0x09, 0xf1, 0x38, 0x42, 0xb0, 0x64, 0x1b, 0x63, 0xd2,
	0x90, 0x9a, 0xd2, 0xce, 0x4a, 0x3f, 0x88, 0xfd, 0xdc, 0x0f, 0x83, 0x1b, 0x0d, 0xb9, 0x29, 0xed,
	0xac, 0xf5, 0x83, 0x18, 0x3f, 0x84, 0x07, 0x5d, 0xea, 0x71, 0xb1, 0xdb, 0x13, 0xdb, 0x71, 0x0b,
	0x2a, 0x22, 0xb5, 0x90, 0x49, 0x99, 0x63, 0xfa, 0x08, 0xb5, 0x34, 0x93, 0xe7, 0x30, 0xdb, 0x23,
	0xa8, 0x0d, 0x77, 0x6d, 0x91, 0x6b, 0x48, 0x4d, 0x65, 0x67, 0xb5, 0x5d, 0xd7, 0x52, 0xb2, 0xb5,
	0xa8, 0xf5, 0x18, 0x87, 0x5f, 0xc2, 0xc6, 0x09, 0xe1, 0x37, 0x4b, 0xc2, 0xc7, 0x80, 0xe6, 0x81,
	0xa2, 0xe4, 0x1b, 0xa8, 0x08, 0xaa, 0x00, 0x5c, 0x5e, 0x31, 0x82, 0xe1, 0x53, 0xb8, 0xd7, 0x61,
	0xb6, 0x4d, 0x4c, 0x1e, 0x55, 0x7b, 0x02, 0x2b, 0x26, 0xb3, 0xb9, 0x41, 0x6d, 0xe2, 0x8a, 0x92,
	0x49, 0x02, 0x35, 0x92, 0x0a, 0x72, 0xb0, 0x16, 0x33, 0xbd, 0x82, 0xf5, 0x98, 0x49, 0xb4, 0x53,
	0x07, 0x99, 0x3a, 0x21, 0xc7, 0xc1, 0xf2, 0xf5, 0xd5, 0xa6, 0x7c, 0xd6, 0xeb, 0xcb, 0xd4, 0xc1,
	0x9f, 0x60, 0xe3, 0x90, 0x7a, 0x66, 0xba, 0x6e, 0x23, 0xdd, 0x7b, 0xc2, 0x9c, 0xee, 0x48, 0xce,
	0x74, 0x84, 0x77, 0xa1, 0x76, 0x48, 0x46, 0xe4, 0x36, 0x17, 0x01, 0xff, 0x91, 0xa0, 0x2a, 0x60,
	0x1d, 0x66, 0x0f, 0xa9, 0x85, 0x8e, 0x73, 0x43, 0xda, 0x2d, 0x3e, 0xb2, 0x10, 0x1f, 0x7d, 0x79,
	0x47, 0x36, 0x77, 0x67, 0xc9, 0xe0, 0xd4, 0x41, 0x4c, 0x1c, 0x2e, 0xa1, 0xfb, 0xa0, 0x5c, 0x92,
	0x99, 0xa8, 0xee, 0x87, 0x68, 0x1f, 0xee, 0x4c, 0x8d, 0xd1, 0x84, 0x04, 0x12, 0x56, 0xdb, 0xdb,
	0x99, 0x3a, 0x9d, 0x48, 0x51, 0xaa, 0x60, 0x3f, 0xdc, 0xf3, 0x5e, 0xde, 0x93, 0xf0, 0x39, 0xd4,
	0x8b, 0x41, 0xfe, 0x09, 0x51, 0x9b, 0x13, 0x77, 0x68, 0x98, 0x91, 0xe0, 0x24, 0x21, 0xc6, 0x20,
	0xe7, 0xc6, 0xd0, 0x83, 0xfa, 0x09, 0xe1, 0x31, 0xe5, 0x59, 0xcf, 0xfb, 0xdf, 0x3b, 0xf0, 0x0d,
	0x56, 0xe7, 0xe8, 0x16, 0x8c, 0xb4, 0xa4, 0xa5, 0xb4, 0x10, 0x25, 0x23, 0x04, 0xf7, 0xe0, 0x51,
	0xae, 0x61, 0x71, 0xd5, 0xde, 0x81, 0x42, 0x9d, 0x68, 0x84, 0x6a, 0xd9, 0xd1, 0x9e, 0xf5, 0x0e,
	0x2a, 0xd7, 0x57, 0x9b, 0x8a, 0xbf, 0xd3, 0xc7, 0xb7, 0xff, 0x2e, 0x41, 0xa5, 0x13, 0x02, 0x51,
	0x17, 0xaa, 0x29, 0x47, 0x41, 0x5b, 0x59, 0x9a, 0x02, 0xbf, 0x51, 0xeb, 0x5a, 0xe8, 0x52, 0x5a,
	0xe4, 0x52, 0xda, 0x91, 0xef, 0x52, 0xe8, 0x0b, 0xac, 0xcd, 0xbb, 0x02, 0xc2, 0x19, 0xb2, 0x02,
	0xf3, 0x51, 0xb7, 0x16, 0x62, 0x84, 0xd2, 0xcf, 0x00, 0xc9, 0xcb, 0x47, 0xcd, 0xcc, 0x96, 0x9c,
	0x7b, 0xa8, 0xcf, 0x17, 0x20, 0x04, 0x65, 0x17, 0xaa, 0xa9, 0x27, 0x94, 0x53, 0x5e, 0xf4, 0xc0,
	0x4a, 0x95, 0x9f, 0x42, 0x45, 0x18, 0x01, 0x7a, 0x9a, 0x1f, 0xc4, 0xdc, 0x93, 0x57, 0x9f, 0x95,
	0x2d, 0x8b, 0xbe, 0x8e, 0x01, 0x12, 0x9f, 0xc8, 0x49, 0xcd, 0x59, 0x48, 0x69, 0x47, 0xdf, 0x61,
	0x3d, 0x73, 0x6f, 0xd0, 0x76, 0xfe, 0x54, 0x0a, 0x1e, 0x82, 0xfa, 0xe2, 0x26, 0x58, 0xd8, 0xe9,
	0x81, 0xfe, 0xf5, 0xf5, 0xed, 0xff, 0x85, 0xfb, 0xd3, 0xd6, 0x60, 0x39, 0x68, 0xf1, 0xed, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x65, 0x5c, 0x0c, 0x87, 0x43, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CircuitClient is the client API for Circuit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CircuitClient interface {
	CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*types.Empty, error)
	ListNetworks(ctx context.Context, in *ListNetworksRequest, opts ...grpc.CallOption) (*ListNetworksResponse, error)
	GetNetwork(ctx context.Context, in *GetNetworkRequest, opts ...grpc.CallOption) (*GetNetworkResponse, error)
	DeleteNetwork(ctx context.Context, in *DeleteNetworkRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*types.Empty, error)
	GetContainerIPs(ctx context.Context, in *GetContainerIPsRequest, opts ...grpc.CallOption) (*GetContainerIPsResponse, error)
}

type circuitClient struct {
	cc *grpc.ClientConn
}

func NewCircuitClient(cc *grpc.ClientConn) CircuitClient {
	return &circuitClient{cc}
}

func (c *circuitClient) CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.circuit.v1.Circuit/CreateNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *circuitClient) ListNetworks(ctx context.Context, in *ListNetworksRequest, opts ...grpc.CallOption) (*ListNetworksResponse, error) {
	out := new(ListNetworksResponse)
	err := c.cc.Invoke(ctx, "/io.circuit.v1.Circuit/ListNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *circuitClient) GetNetwork(ctx context.Context, in *GetNetworkRequest, opts ...grpc.CallOption) (*GetNetworkResponse, error) {
	out := new(GetNetworkResponse)
	err := c.cc.Invoke(ctx, "/io.circuit.v1.Circuit/GetNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *circuitClient) DeleteNetwork(ctx context.Context, in *DeleteNetworkRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.circuit.v1.Circuit/DeleteNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *circuitClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/io.circuit.v1.Circuit/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *circuitClient) Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.circuit.v1.Circuit/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *circuitClient) GetContainerIPs(ctx context.Context, in *GetContainerIPsRequest, opts ...grpc.CallOption) (*GetContainerIPsResponse, error) {
	out := new(GetContainerIPsResponse)
	err := c.cc.Invoke(ctx, "/io.circuit.v1.Circuit/GetContainerIPs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CircuitServer is the server API for Circuit service.
type CircuitServer interface {
	CreateNetwork(context.Context, *CreateNetworkRequest) (*types.Empty, error)
	ListNetworks(context.Context, *ListNetworksRequest) (*ListNetworksResponse, error)
	GetNetwork(context.Context, *GetNetworkRequest) (*GetNetworkResponse, error)
	DeleteNetwork(context.Context, *DeleteNetworkRequest) (*types.Empty, error)
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	Disconnect(context.Context, *DisconnectRequest) (*types.Empty, error)
	GetContainerIPs(context.Context, *GetContainerIPsRequest) (*GetContainerIPsResponse, error)
}

// UnimplementedCircuitServer can be embedded to have forward compatible implementations.
type UnimplementedCircuitServer struct {
}

func (*UnimplementedCircuitServer) CreateNetwork(ctx context.Context, req *CreateNetworkRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNetwork not implemented")
}
func (*UnimplementedCircuitServer) ListNetworks(ctx context.Context, req *ListNetworksRequest) (*ListNetworksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNetworks not implemented")
}
func (*UnimplementedCircuitServer) GetNetwork(ctx context.Context, req *GetNetworkRequest) (*GetNetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNetwork not implemented")
}
func (*UnimplementedCircuitServer) DeleteNetwork(ctx context.Context, req *DeleteNetworkRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNetwork not implemented")
}
func (*UnimplementedCircuitServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedCircuitServer) Disconnect(ctx context.Context, req *DisconnectRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedCircuitServer) GetContainerIPs(ctx context.Context, req *GetContainerIPsRequest) (*GetContainerIPsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainerIPs not implemented")
}

func RegisterCircuitServer(s *grpc.Server, srv CircuitServer) {
	s.RegisterService(&_Circuit_serviceDesc, srv)
}

func _Circuit_CreateNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CircuitServer).CreateNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.circuit.v1.Circuit/CreateNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CircuitServer).CreateNetwork(ctx, req.(*CreateNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Circuit_ListNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CircuitServer).ListNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.circuit.v1.Circuit/ListNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CircuitServer).ListNetworks(ctx, req.(*ListNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Circuit_GetNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CircuitServer).GetNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.circuit.v1.Circuit/GetNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CircuitServer).GetNetwork(ctx, req.(*GetNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Circuit_DeleteNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CircuitServer).DeleteNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.circuit.v1.Circuit/DeleteNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CircuitServer).DeleteNetwork(ctx, req.(*DeleteNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Circuit_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CircuitServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.circuit.v1.Circuit/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CircuitServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Circuit_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CircuitServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.circuit.v1.Circuit/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CircuitServer).Disconnect(ctx, req.(*DisconnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Circuit_GetContainerIPs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainerIPsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CircuitServer).GetContainerIPs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.circuit.v1.Circuit/GetContainerIPs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CircuitServer).GetContainerIPs(ctx, req.(*GetContainerIPsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Circuit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.circuit.v1.Circuit",
	HandlerType: (*CircuitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNetwork",
			Handler:    _Circuit_CreateNetwork_Handler,
		},
		{
			MethodName: "ListNetworks",
			Handler:    _Circuit_ListNetworks_Handler,
		},
		{
			MethodName: "GetNetwork",
			Handler:    _Circuit_GetNetwork_Handler,
		},
		{
			MethodName: "DeleteNetwork",
			Handler:    _Circuit_DeleteNetwork_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _Circuit_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Circuit_Disconnect_Handler,
		},
		{
			MethodName: "GetContainerIPs",
			Handler:    _Circuit_GetContainerIPs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/ehazlett/circuit/api/circuit/v1/circuit.proto",
}
